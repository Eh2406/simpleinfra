#!/usr/bin/env python3

from github import GithubIntegration
from sys import argv, stdin
import os


def token(user, repo):
    base = os.path.dirname(os.path.realpath(__file__))
    with open(os.path.join(base, '..', 'app_id.txt'), 'r') as fh:
        app_id = int(fh.read())

    with open(os.path.join(base, '..', 'app_private_key.pem'), 'rb') as fh:
        private_key = fh.read()

    integration = GithubIntegration(app_id, private_key)
    installation = integration.get_installation(user, repo)
    auth = integration.get_access_token(installation.id)

    return auth.token


def credential_provider():
    if argv[1] != "get":
        exit(0)

    config = [x.strip() for x in stdin]

    if config[1] != "host=github.com":
        exit(0)

    path = config[2].split('=')
    path = path[1].split('/')

    # Get the username of the caller, not the owner of
    # this script (which is setuid)
    user = os.getlogin()
    if user.startswith("gh-"):
        user = user[3:]

    # we don't support usernames differing from repo owner names for now
    if user != path[0]:
        exit(0)
    repo = path[1].rsplit('.', 1)[0]

    for config in config:
        print(config)

    print(f"username={user}")
    print(f"password={token(user, repo)}")
    print()


if __name__ == "__main__":
    credential_provider()
